## Default values.yaml for Telegraf
## This is a YAML-formatted file.
## ref: https://hub.docker.com/r/library/telegraf/tags/
image:
  repo: "telegraf"
  tag: "1.10.3-alpine"
  pullPolicy: IfNotPresent

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    memory: 256Mi
    cpu: 0.1
  limits:
    memory: 2Gi
    cpu: 1

## Pod priority
## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# priorityClassName: ""

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Configure the service for this telegraf instance. If you are running
## Any of the service plugins you will need this enabled
## Service Plugins: http_listener, statsd, tcp_listener, udp_listener
## ref: http://kubernetes.io/docs/user-guide/services/
service:
  enabled: true
  type: ClusterIP

## Exposed telegraf configuration
## For full list of possible values see `/docs/all-config-values.yaml` and `/docs/all-config-values.toml`
## ref: https://docs.influxdata.com/telegraf/v1.8/administration/configuration/

config:
#  global_tags:
#    dc: "us-east-1"
#    user: "$USER"
  agent:
    interval: "10s"
    round_interval: true
    metric_batch_size: 1000
    metric_buffer_limit: 10000
    collection_jitter: "0s"
    flush_interval: "10s"
    flush_jitter: "0s"
    precision: ""
    debug: false
    quiet: false
    logfile: ""
    hostname: "$HOSTNAME"
    omit_hostname: false
  outputs:
    - influxdb:
        urls:
          - "http://data-influxdb.tick:8086"
        database: "telegraf"
#        skip_database_creation: false
#        retention_policy: ""
#        write_consistency: "any"
        timeout: "5s"
#        username: "telegraf"
#        password: "metricsmetricsmetricsmetrics"
        user_agent: "telegraf"
#        udp_payload: 512
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
        insecure_skip_verify: false
#    - amqp:
#        auth_method: "PLAIN"
#        brokers:
#         - "amqp://localhost:5672/influxdb"
#        data_format: "influx"
#        database: "telegraf"
#        delivery_mode: "transient"
#        exchange: "telegraf"
#        exchange_arguments:
#          hash_propery: "timestamp"
#        exchange_declare_passive: false
#        exchange_durability: "durable"
#        exchange_type: "topic"
#        headers:
#          database: "telegraf"
#          retention_policy: "default"
#        insecure_skip_verify: false
#        max_messages: 0
#        password: '""
#        retention_policy: "default"
#        routing_key: "telegraf"
#        routing_tag: "host"
#        timeout: "5s"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        use_batch_format: false
#        username: ""
#    - kafka:
#        brokers:
#         - "localhost:9092"
#        client_id: "Telegraf"
#        compression_codec: 0
#        data_format: "influx"
#        insecure_skip_verify: false
#        max_message_bytes: 1000000
#        max_retry: 3
#        required_acks: -1
#        routing_key: ""
#        routing_tag: "host"
#        sasl_password: "secret"
#        sasl_username: "kafka"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        topic: "telegraf"
#        version: ""
#    - mqtt:
#        servers:
#          - "localhost:1883"
#        topic_prefix: "telegraf"
#        qos: 2
#        username: "telegraf"
#        password: "metricsmetricsmetricsmetrics"
#        client_id: ""
#        timeout: "5s"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        insecure_skip_verify: false
#        batch: false
#        data_format: "influx"
#    - nats:
#        servers:
#          - "nats://localhost:4222"
#        username: ""
#        password: ""
#        subject: "telegraf"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        insecure_skip_verify: false
#        data_format: "influx"
#    - nsq:
#        server: "localhost:4150"
#        topic: "telegraf"
#        data_format: "influx"

  inputs:

#    - aerospike:
#        servers:
#          - "localhost:3000"
#    - apache:
#        urls:
#          - "http://localhost/server-status?auto"
#        username: "myuser"
#        password: "mypassword"
#        response_timeout: "5s"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        insecure_skip_verify: false
#    - cassandra:
#        context: "/jolokia/read"
#        servers:
#          - "myuser:mypassword@10.10.10.1:8778"
#          - "10.10.10.2:8778"
#          - ":8778"
#        metrics :
#          - "/java.lang:type=Memory/HeapMemoryUsage"
#          - "/org.apache.cassandra.metrics:type=Table,keyspace=*,scope=*,name=ReadLatency"
#    - cloudwatch:
#        region: "us-east-1"
#        access_key: ""
#        secret_key: ""
#        token: ""
#        role_arn: ""
#        profile: ""
#        shared_credential_file: ""
#        period: "5m"
#        delay: "5m"
#        interval: "5m"
#        cache_ttl: "10m"
#        namespace: "AWS/ELB"
#        ratelimit: 10
#        metrics:
#         names:
#           - "Latency"
#           - "RequestCount"
#         dimensions:
#           name: "LoadBalancerName"
#           value: "p-example"
#    - consul:
#        address: localhost
#        datacenter: ""
#        insecure_skip_verify: true
#        password: ""
#        scheme: "http"
#        tag_delimiter: ":"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        token: ""
#        username: ""
#    - couchbase:
#        servers:
#          - "http://localhost:8091"
#    - couchdb:
#        hosts:
#          - "http://localhost:8086/_stats"
#    - disque:
#        servers:
#          - "localhost"
#    - dns_query:
#        servers:
#          - "8.8.8.8"
#        domains:
#          - "."
#        record_type: "A"
#        port: 53
#        timeout: 2
#    - dovecot:
#        servers:
#          - "localhost:24242"
#        type: "global"
#        filters:
#          - ""
#    - elasticsearch:
#        cluster_health: false
#        cluster_health_level: "indices"
#        cluster_stats: false
#        cluster_stats_only_from_master: true
#        http_timeout: "5s"
#        insecure_skip_verify: false
#        local: true
#        node_stats:
#          - "jvm"
#          - "http"
#        servers:
#          - "http://localhost:9200"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#    - graylog:
#        servers:
#          - "http://[graylog-server-ip]:12900/system/metrics/multiple"
#        metrics:
#          - "jvm.cl.loaded"
#          - "jvm.memory.pools.Metaspace.committed"
#        username: ""
#        password: ""
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        insecure_skip_verify: false
#    - haproxy:
#        insecure_skip_verify: false
#        keep_field_names: false
#        password: "admin"
#        servers:
#          - "http://myhaproxy.com:1936/haproxy?stats"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        username: "admin"

    - influxdb:
        urls:
          - "http://data-influxdb.tick:8086/debug/vars"
        timeout: "5s"
    - kapacitor:
        urls:
          - "http://alerts-kapacitor.tick:9092/debug/vars"
        timeout: "5s"

#    - lustre2:
#        ost_procfiles:
#          - "/proc/fs/lustre/obdfilter/*/stats"
#          - "/proc/fs/lustre/osd-ldiskfs/*/stats"
#          - "/proc/fs/lustre/obdfilter/*/job_stats"
#        mds_procfiles:
#          - "/proc/fs/lustre/mdt/*/md_stats"
#          - "/proc/fs/lustre/mdt/*/job_stats"
#    - mailchimp:
#        api_key: ""
#        days_old: 0
#        campaign_id: ""
#    - memcached:
#        servers:
#          - "localhost:11211"
#        unix_sockets:
#          - "/var/run/memcached.sock"
#    - mesos:
#        timeout: 100
#        masters:
#          - "localhost:5050"
#        master_collections:
#          - "resources"
#          - "master"
#          - "system"
#          - "agents"
#          - "frameworks"
#          - "tasks"
#          - "messages"
#          - "evqueue"
#          - "registrar"
#        slaves:
#          -
#        slave_collections:
#          - "resources"
#          - "agent"
#          - "system"
#          - "executors"
#          - "tasks"
#          - "messages"
#    - mongodb:
#        servers:
#          - "mongodb://user:password@127.0.0.1:27017"
#        gather_perdb_stats: false
#    - mysql:
#        servers:
#          - "tcp(127.0.0.1:3306)?tls=false"
#        perf_events_statements_digest_text_limit : 120
#        perf_events_statements_limit: 250
#        perf_events_statements_time_limit        : 86400
#        table_schema_databases: []
#        gather_table_schema: false
#        gather_process_list: true
#        gather_info_schema_auto_inc: true
#        gather_slave_status: true
#        gather_binary_logs: false
#        gather_table_io_waits: false
#        gather_table_lock_waits: false
#        gather_index_io_waits: false
#        gather_event_waits: false
#        gather_file_events_stats: false
#        gather_perf_events_statements: false
#        interval_slow: "30m"
#    - net_response:
#        protocol: "tcp"
#        address: "github.com:80"
#        timeout: "1s"
#        send: "ssh"
#        expect: "ssh"
#        read_timeout: "1s"
#    - nginx:
#        urls:
#          - "http://nginx.kube-system:18080/status"
#    - nsq:
#        endpoints:
#          - "http://localhost:4151"
#    - phpfpm:
#        urls:
#          - "http://localhost/status"
#    - ping:
#        urls:
#          - "www.google.com"
#        count: 1
#        ping_interval: 1.0
#        timeout: 1.0
#        interface: ""
#    - postgresql:
#        address: "postgres://user:password@localhost?sslmode=disable"
#        ignored_databases:
#          - "postgres"
#        databases:
#          - "app_production"
#          - "testing"

    - prometheus:
        urls:
          - "https://kubernetes.default:443/metrics"
        bearer_token: "/var/run/secrets/kubernetes.io/serviceaccount/token"
        response_timeout: "3s"
        insecure_skip_verify: true
#        kubernetes_services:
#          - "http://my-service-dns.my-namespace:9100/metrics"
#        kube_config: "/path/to/kubernetes.config"
#        bearer_token_string: "abc_123"
#        monitor_kubernetes_pods: true
#    - rabbitmq:
#        url: "http://localhost:15672"
#        name: "rmq-server-1"
#        username: "guest"
#        password: "guest"
#        tls_ca: "/etc/telegraf/ca.pem"
#        tls_cert: "/etc/telegraf/cert.pem"
#        tls_key: "/etc/telegraf/key.pem"
#        insecure_skip_verify: false
#        header_timeout: "3s"
#        client_timeout: "4s"
#        nodes:
#          - "rabbit@node1"
#          - "rabbit@node2"
#        queues:
#          - "telegraf"
#       exchanges:
#          - "telegraf"
#       queue_name_include:
#          -
#       queue_name_exclude:
#          -
#    - raindrops:
#        urls:
#          - "http://localhost:8080/_raindrops"
#    - redis:
#        servers:
#          - "tcp://localhost:6379"
#    - rethinkdb:
#        servers:
#          - "127.0.0.1:28015"
#    - riak:
#        servers:
#          - "http://localhost:8098"
#    - sqlserver:
#        servers:
#          - "Server=192.168.1.10;Port=1433;User Id=<user>;Password=<pw>;app name=telegraf;log=1;"
#    - twemproxy:
#        addr: "localhost:22222"
#        pools:
#          - "redis_pool"
#          - "mc_pool"
#    - varnish:
#        binary: "/usr/bin/varnishstat"
#        instance_name: "instanceName"
#        stats:
#          - "MAIN.cache_hit"
#          - "MAIN.cache_miss"
#          - "MAIN.uptime"
#        timeout: "1s"
#    - vsphere:
#        collect_concurrency: 1
#        discover_concurrency: 1
#        force_discover_on_init: false
#        host_metric_include:
#          - "cpu.coreUtilization.average"
#          - "cpu.costop.summation"
#          - "cpu.demand.average"
#          - "cpu.idle.summation"
#          - "cpu.latency.average"
#          - "cpu.readiness.average"
#          - "cpu.ready.summation"
#          - "cpu.swapwait.summation"
#          - "cpu.usage.average"
#          - "cpu.usagemhz.average"
#          - "cpu.used.summation"
#          - "cpu.utilization.average"
#          - "cpu.wait.summation"
#          - "disk.deviceReadLatency.average"
#          - "disk.deviceWriteLatency.average"
#          - "disk.kernelReadLatency.average"
#          - "disk.kernelWriteLatency.average"
#          - "disk.numberReadAveraged.average"
#          - "disk.numberWriteAveraged.average"
#          - "disk.read.average"
#          - "disk.totalReadLatency.average"
#          - "disk.totalWriteLatency.average"
#          - "disk.write.average"
#          - "mem.active.average"
#          - "mem.latency.average"
#          - "mem.state.latest"
#          - "mem.swapin.average"
#          - "mem.swapinRate.average"
#          - "mem.swapout.average"
#          - "mem.swapoutRate.average"
#          - "mem.totalCapacity.average"
#          - "mem.usage.average"
#          - "mem.vmmemctl.average"
#          - "net.bytesRx.average"
#          - "net.bytesTx.average"
#          - "net.droppedRx.summation"
#          - "net.droppedTx.summation"
#          - "net.errorsRx.summation"
#          - "net.errorsTx.summation"
#          - "net.usage.average"
#          - "power.power.average"
#          - "storageAdapter.numberReadAveraged.average"
#          - "storageAdapter.numberWriteAveraged.average"
#          - "storageAdapter.read.average"
#          - "storageAdapter.write.average"
#          - "sys.uptime.latest"
#        insecure_skip_verify: false
#        max_query_metrics: 256
#        max_query_objects: 256
#        object_discovery_interval: "300s"
#        password: "secret"
#        separator: "_"
#        ssl_ca: "/path/to/cafile"
#        ssl_cert: "/path/to/certfile"
#        ssl_key: "/path/to/keyfile"
#        timeout: "60s"
#        username: "user@corp.local"
#        vcenters:
#          - "https://vcenter.local/sdk"
#        vm_metric_include:
#          - "cpu.demand.average"
#          - "cpu.idle.summation"
#          - "cpu.latency.average"
#          - "cpu.readiness.average"
#          - "cpu.ready.summation"
#          - "cpu.run.summation"
#          - "cpu.usagemhz.average"
#          - "cpu.used.summation"
#          - "cpu.wait.summation"
#          - "mem.active.average"
#          - "mem.granted.average"
#          - "mem.latency.average"
#          - "mem.swapin.average"
#          - "mem.swapinRate.average"
#          - "mem.swapout.average"
#          - "mem.swapoutRate.average"
#          - "mem.usage.average"
#          - "mem.vmmemctl.average"
#          - "net.bytesRx.average"
#          - "net.bytesTx.average"
#          - "net.droppedRx.summation"
#          - "net.droppedTx.summation"
#          - "net.usage.average"
#          - "power.power.average"
#          - "virtualDisk.numberReadAveraged.average"
#          - "virtualDisk.numberWriteAveraged.average"
#          - "virtualDisk.read.average"
#          - "virtualDisk.readOIO.latest"
#          - "virtualDisk.throughput.usage.average"
#          - "virtualDisk.totalReadLatency.average"
#          - "virtualDisk.totalWriteLatency.average"
#          - "virtualDisk.write.average"
#          - "virtualDisk.writeOIO.latest"
#          - "sys.uptime.latest"
#    - win_perf_counters:
#        object:
#          - Counters:
#              - "% Idle Time"
#              - "% Interrupt Time"
#              - "% Privileged Time"
#              - "% User Time"
#              - "% Processor Time"
#              - "% DPC Time"
#            IncludeTotal: true
#            Instances:
#              - "*"
#            Measurement: "win_cpu"
#            ObjectName: "Processor"
#          - Counters:
#              - "% Idle Time"
#              - "% Disk Time"
#              - "% Disk Read Time"
#              - "% Disk Write Time"
#              - "Current Disk Queue Length"
#              - "% Free Space"
#              - "Free Megabytes"
#            Instances:
#              - "*"
#            Measurement: "win_disk"
#            ObjectName: "LogicalDisk"
#          - Counters:
#              - "Disk Read Bytes/sec"
#              - "Disk Write Bytes/sec"
#              - "Current Disk Queue Length"
#              - "Disk Reads/sec"
#              - "Disk Writes/sec"
#              - "% Disk Time"
#              - "% Disk Read Time"
#              - "% Disk Write Time"
#            Instances:
#              - "*"
#            Measurement: "win_diskio"
#            ObjectName: "PhysicalDisk"
#          - Counters:
#              - "Bytes Received/sec"
#              - "Bytes Sent/sec"
#              - "Packets Received/sec"
#              - "Packets Sent/sec"
#              - "Packets Received Discarded"
#              - "Packets Outbound Discarded"
#              - "Packets Received Errors"
#              - "Packets Outbound Errors"
#            Instances:
#              - "*"
#            Measurement: "win_net"
#            ObjectName: "Network Interface"
#          - Counters:
#              - "Context Switches/sec"
#              - "System Calls/sec"
#              - "Processor Queue Length"
#              - "System Up Time"
#            Instances:
#              - "------"
#            Measurement: "win_system"
#            ObjectName: "System"
#          - Counters:
#              - "Available Bytes"
#              - "Cache Faults/sec"
#              - "Demand Zero Faults/sec"
#              - "Page Faults/sec"
#              - "Pages/sec"
#              - "Transition Faults/sec"
#              - "Pool Nonpaged Bytes"
#              - "Pool Paged Bytes"
#              - "Standby Cache Reserve Bytes"
#              - "Standby Cache Normal Priority Bytes"
#              - "Standby Cache Core Bytes"
#            Instances:
#              - "------"
#            Measurement: "win_mem"
#            ObjectName: "Memory"
#          - Counters:
#              - "% Usage"
#            Instances:
#              - "_Total"
#            Measurement: "win_swap"
#            ObjectName: "Paging File"
#          - Counters:
#              - "Get Requests/sec"
#              - "Post Requests/sec"
#              - "Connection Attempts/sec"
#              - "Current Connections"
#              - "ISAPI Extension Requests/sec"
#            Instances:
#              - "*"
#            Measurement: "win_websvc"
#            ObjectName: "Web Service"
#          - Counters:
#              - "URI Cache Hits %"
#              - "Kernel: URI Cache Hits %"
#              - "File Cache Hits %"
#            Instances:
#              - "*"
#            Measurement: "win_websvc_cache"
#            ObjectName: "Web Service Cache"
#    - win_services:
#        service_names:
#          - "LanmanServer"
#          - "TermService"
#    - zookeeper:
#        servers:
#          - "localhost:2181"
#    - http_listener:
#        service_address: ":8186"
#        read_timeout: "10s"
#        write_timeout: "10s"
#        max_body_size: 0
#        max_line_size: 0

    - statsd:
        service_address: ":8125"
        percentiles:
          - 50
          - 95
          - 99
        metric_separator: "_"
        allowed_pending_messages: 10000
        percentile_limit: 1000

